kind: StatefulSet
apiVersion: apps/v1beta1
metadata:
  name: kafka-deployment-1
  namespace: kafka-cluster
spec:
  serviceName: kafka-1
  replicas: 1
  selector:
    matchLabels:
      name: kafka-broker-1
  template:
    spec:
      containers:
      - name: kafka-1
        image: wurstmeister/kafka:2.11-2.0.1
        ports:
        - containerPort: 9092
        env:
        - name: KAFKA_ADVERTISED_PORT
          value: "9092"
        - name: KAFKA_ADVERTISED_HOST_NAME
          value: "kafka-1"
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: zoo-1:2181,zoo-2:2181,zoo-3:2181
        - name: KAFKA_CREATE_TOPICS
          value: "responseSubmitted"
        - name: KAFKA_LOG_DIRS
          value: /kafka/kafka-logs
        - name: KAFKA_BROKER_ID
          value: "1"
        - name: KAFKA_JMX_PORT
          value: "5555"
        - name: KAFKA_CLEANUP_POLICY
          value: "compact"
        volumeMounts:
          - name: xr-volume
            mountPath: "/kafka/kafka-logs"
  volumeClaimTemplates:
  - metadata:
      name: kafka-pv-1
    spec:
      storageClassName: local-path
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi
---
kind: StatefulSet
apiVersion: apps/v1beta1
metadata:
  name: kafka-deployment-2
  namespace: kafka-cluster
spec:
  serviceName: kafka-2
  replicas: 1
  selector:
    matchLabels:
      name: kafka-broker-2
  template:
    spec:
      containers:
      - name: kafka-2
        image: wurstmeister/kafka:2.11-2.0.1
        ports:
        - containerPort: 9092
        env:
        - name: KAFKA_ADVERTISED_PORT
          value: "9092"
        - name: KAFKA_ADVERTISED_HOST_NAME
          value: "kafka-2"
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: zoo-1:2181,zoo-2:2181,zoo-3:2181
        - name: KAFKA_CREATE_TOPICS
          value: "responseSubmitted"
        - name: KAFKA_LOG_DIRS
          value: /kafka/kafka-logs
        - name: KAFKA_BROKER_ID
          value: "2"
        - name: KAFKA_JMX_PORT
          value: "5555"
        - name: KAFKA_CLEANUP_POLICY
          value: "compact"
        volumeMounts:
          - name: xr-volume
            mountPath: "/kafka/kafka-logs"
  volumeClaimTemplates:
  - metadata:
      name: kafka-pv-2
    spec:
      storageClassName: local-path
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi
---
kind: StatefulSet
apiVersion: apps/v1beta1
metadata:
  name: kafka-deployment-3
  namespace: kafka-cluster
spec:
  serviceName: kafka-3
  replicas: 1
  selector:
    matchLabels:
      name: kafka-broker-3
  template:
    spec:
      containers:
      - name: kafka-3
        image: wurstmeister/kafka:2.11-2.0.1
        ports:
        - containerPort: 9092
        env:
        - name: KAFKA_ADVERTISED_PORT
          value: "9092"
        - name: KAFKA_ADVERTISED_HOST_NAME
          value: "kafka-3"
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: zoo-1:2181,zoo-2:2181,zoo-3:2181
        - name: KAFKA_CREATE_TOPICS
          value: "responseSubmitted"
        - name: KAFKA_LOG_DIRS
          value: /kafka/kafka-logs
        - name: KAFKA_BROKER_ID
          value: "3"
        - name: KAFKA_JMX_PORT
          value: "5555"
        - name: KAFKA_CLEANUP_POLICY
          value: "compact"
        volumeMounts:
          - name: xr-volume
            mountPath: "/kafka/kafka-logs"
  volumeClaimTemplates:
  - metadata:
      name: kafka-pv-3
    spec:
      storageClassName: local-path
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi